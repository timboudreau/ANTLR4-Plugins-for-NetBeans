package org.nemesis.registration.typenames;

/**
 * <b>DO NOT MODIFY THIS FILE!</b> This file is generated by analyzing the POMs
 * and class files used in all subprojects of theparent project for class names
 * that are likely to be used in codegeneration. It will be regenerated at build
 * time.
 **/
public enum Libraries implements Library {

    ACTIONS("org.netbeans.api", "org-openide-actions", "RELEASE113"),
    COMMON("org.netbeans.api", "org-netbeans-api-annotations-common",
        "RELEASE113"),
    ANT("com.mastfrog", "antlr-project-helpers-ant", "2.0.90"),
    ANTLR_LANGUAGE("com.mastfrog", "antlr-language-spi", "2.0.90"),
    REFACTORING("com.mastfrog", "antlr-refactoring", "2.0.90"),
    UTILS("com.mastfrog", "antlr-utils", "2.0.90"),
    ANTLR_WRAPPER("com.mastfrog", "antlr-wrapper", "2.0.90"),
    API("org.netbeans.contrib.yenta", "api", "1.1"),
    API_COMMON("org.netbeans.modules", "org-netbeans-modules-java-api-common",
        "RELEASE113"),
    AWT("org.netbeans.api", "org-openide-awt", "RELEASE113"),
    COMPLETION("com.mastfrog", "antlr-code-completion-spi", "2.0.90"),
    ANTLR_COMMON("com.mastfrog", "antlr-common", "2.0.90"),
    CODE_COMPLETION("com.mastfrog", "antlr-code-completion", "2.0.90"),
    CORE("com.mastfrog", "code-completion-core", "2.0.90"),
    DIALOGS("org.netbeans.api", "org-openide-dialogs", "RELEASE113"),
    DOCUMENT("org.netbeans.api", "org-netbeans-modules-editor-document",
        "RELEASE113"),
    EDITOR("org.netbeans.api", "org-netbeans-modules-editor", "RELEASE113"),
    EDITOR_COMPLETION("org.netbeans.api",
        "org-netbeans-modules-editor-completion", "RELEASE113"),
    EXTRACTION("com.mastfrog", "extraction", "2.0.90"),
    FEATURES("com.mastfrog", "editor-features", "2.0.90"),
    FILESYSTEMS("org.netbeans.api", "org-openide-filesystems", "RELEASE113"),
    FILTERS("com.mastfrog", "character-filters", "2.0.90"),
    FOLD("org.netbeans.api", "org-netbeans-modules-editor-fold", "RELEASE113"),
    FOLDING("com.mastfrog", "antlr-code-folding", "2.0.90"),
    FORMATTERS("com.mastfrog", "antlr-formatters", "2.0.90"),
    FORMATTING("com.mastfrog", "antlr-language-formatting", "2.0.90"),
    UI("com.mastfrog", "antlr-language-formatting-ui", "2.0.90"),
    HELPERS("com.mastfrog", "antlr-project-helpers", "2.0.90"),
    HIGHLIGHTING("com.mastfrog", "antlr-highlighting", "2.0.90"),
    HINTS("org.netbeans.api", "org-netbeans-spi-editor-hints", "RELEASE113"),
    INDENT("org.netbeans.api", "org-netbeans-modules-editor-indent",
        "RELEASE113"),
    INDEXING("org.netbeans.api", "org-netbeans-modules-parsing-indexing",
        "RELEASE113"),
    INPUT("com.mastfrog", "antlr-input", "2.0.90"),
    IO("org.netbeans.api", "org-openide-io", "RELEASE113"),
    LEXER("org.netbeans.api", "org-netbeans-modules-lexer", "RELEASE113"),
    LIB("org.netbeans.api", "org-netbeans-modules-editor-lib", "RELEASE113"),
    LIB2("org.netbeans.api", "org-netbeans-modules-editor-lib2", "RELEASE113"),
    LIBRARIES("org.netbeans.api", "org-netbeans-modules-project-libraries",
        "RELEASE113"),
    LOADERS("org.netbeans.api", "org-openide-loaders", "RELEASE113"),
    LOCALIZERS("com.mastfrog", "localizers", "2.0.90"),
    LOOKUP("org.netbeans.api", "org-openide-util-lookup", "RELEASE113"),
    MIMELOOKUP("org.netbeans.api", "org-netbeans-modules-editor-mimelookup",
        "RELEASE113"),
    MODELS("com.mastfrog", "extraction-data-models", "2.0.90"),
    MULTIVIEW("org.netbeans.api", "org-netbeans-core-multiview", "RELEASE113"),
    NAVIGATOR("org.netbeans.api", "org-netbeans-spi-navigator", "RELEASE113"),
    NAVIGATORS("com.mastfrog", "antlr-navigators", "2.0.90"),
    NB("org.netbeans.api", "org-openide-filesystems-nb", "RELEASE113"),
    NODES("org.netbeans.api", "org-openide-nodes", "RELEASE113"),
    UTIL("org.netbeans.api", "org-openide-util", "RELEASE113"),
    OPTIONS("org.netbeans.api", "org-netbeans-modules-options-api", "RELEASE113"),
    OPTIONS_EDITOR("org.netbeans.modules", "org-netbeans-modules-options-editor",
        "RELEASE113"),
    PARSER("com.mastfrog", "tiny-ebnf-parser", "2.0.90"),
    PARSING("org.netbeans.api", "org-netbeans-modules-parsing-api", "RELEASE113"),
    PROGRESS("org.netbeans.api", "org-netbeans-api-progress", "RELEASE113"),
    PROJECT("org.netbeans.api", "org-netbeans-modules-java-project",
        "RELEASE113"),
    PROJECTAPI("org.netbeans.api", "org-netbeans-modules-projectapi",
        "RELEASE113"),
    PROJECT_ANT("org.netbeans.api", "org-netbeans-modules-project-ant",
        "RELEASE113"),
    QUERIES("org.netbeans.api", "org-netbeans-modules-queries", "RELEASE113"),
    MODULES_REFACTORING("org.netbeans.api",
        "org-netbeans-modules-refactoring-api", "RELEASE113"),
    REFACTORING_COMMON("com.mastfrog", "antlr-refactoring-common", "2.0.90"),
    RENAME("com.mastfrog", "antlr-instant-rename", "2.0.90"),
    RESOLVER("com.mastfrog", "antlr-grammar-file-resolver", "2.0.90"),
    RUNTIME("org.antlr", "antlr-runtime", "3.5.2"),
    SETTINGS("org.netbeans.api", "org-netbeans-modules-editor-settings",
        "RELEASE113"),
    SUPPORT("com.mastfrog", "antlr-file-support", "2.0.90"),
    SWING_UTILS("com.mastfrog", "swing-utils", "2.0.90"),
    TEXT("org.netbeans.api", "org-openide-text", "RELEASE113"),
    UTIL_UI("org.netbeans.api", "org-openide-util-ui", "RELEASE113"),
    EDITOR_UTIL("org.netbeans.api", "org-netbeans-modules-editor-util",
        "RELEASE113"),
    EDITOR_UTILS("com.mastfrog", "editor-utils", "2.0.90"),
    WINDOWS("org.netbeans.api", "org-openide-windows", "RELEASE113"),
    WRAPPER("com.mastfrog", "mastfrog-utils-wrapper", "2.0.90")
    ;
    private final String groupId;
    private final String artifactId;
    private final String version;

    Libraries(String groupId, String artifactId, String version) {
        this.groupId = groupId;
        this.artifactId = artifactId;
        this.version = version;
    }

    @Override
    public String groupId() {
        return groupId;
    }

    @Override
    public String artifactId() {
        return artifactId;
    }

    @Override
    public String version() {
        return version;
    }

    @Override
    public String toString() {
        return groupId + ":" + artifactId + ":" + version;
    }

}
